{"version":3,"sources":["components/GithubRedirect.js","components/MyFooter.js","components/Projects.js","components/AboutMe.js","components/Home.js","components/LinkedInRedirect.js","App.js","serviceWorker.js","index.js"],"names":["GithubRedirect","window","location","replace","React","Component","MyFooter","subtitle","size","className","Repository","props","href","url","name","description","home_page","homepage","topics","map","topic","Projects","state","require","config","console","log","process","axios","method","headers","Authorization","result","this","setState","repositories","shuffle","repository","language","html_url","AboutMe","Home","Body","Column","to","LinkedInRedirect","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97d0d6d7.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nexport class GithubRedirect extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        window.location.replace('https://www.github.com/hldprk/');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <span></span>;\r\n    }\r\n\r\n}","\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport Heading from 'react-bulma-components/lib/components/heading/heading';\r\nimport Footer from 'react-bulma-components/lib/components/footer';\r\nimport {SiReact, SiBulma} from 'react-icons/si'\r\n\r\nexport class MyFooter extends Component{\r\n\r\n\r\n    render() {\r\n    \r\n        return <Footer>\r\n            <Heading subtitle size={5} className='has-text-centered'>Built with <SiReact/> React and <SiBulma/> Bulma.</Heading>\r\n        </Footer>\r\n\r\n    }\r\n\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport Heading from 'react-bulma-components/lib/components/heading';\r\nimport Container from 'react-bulma-components/lib/components/container';\r\nimport Columns from 'react-bulma-components/lib/components/columns';\r\nimport Box from 'react-bulma-components/lib/components/box';\r\nimport Tag from 'react-bulma-components/lib/components/tag';\r\n\r\nimport '../App.scss'\r\n\r\nimport axios from 'axios';\r\n\r\nimport shuffle from 'shuffle-array';\r\n\r\nconst Repository = (props) => \r\n        \r\n            <Box className='mb-4'>\r\n                <a href={props.url}><Heading subtitle className='has-text-link has-text-centered mb-5 pb-4' size={4}>{props.name}</Heading></a>\r\n                {props.description === null ? <span/> : (<Heading size={5} className='pb-1 has-text-weight-normal'>{`${props.description}`}</Heading>)}\r\n                {props.home_page === null ? <span/> : <Heading size={6} className='has-text-link'><a href={props.home_page}>{props.homepage}</a></Heading>}\r\n                {props.topics.map(topic => <span><Tag className='is-link is-light'>{topic}</Tag> </span>)}                \r\n            </Box>\r\n\r\n\r\nexport class Projects extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        require('dotenv').config();\r\n\r\n        console.log(process.env.REACT_APP_GITHUB_API_KEY);\r\n        \r\n        try {\r\n            \r\n\r\n            const result = await axios({\r\n                method: \"get\",\r\n                url: `https://api.github.com/users/hldprk/repos`,\r\n                headers: {\r\n\r\n                    Authorization: `Bearer ${process.env.REACT_APP_GITHUB_API_KEY}`,\r\n                    \r\n                    \"Content-Type\": \"application/json\",\r\n                    \r\n                    \"Accept\": \"application/vnd.github.mercy-preview+json\" \r\n                \r\n                }\r\n            });\r\n\r\n\r\n            this.setState({ repositories: shuffle(result['data'].map(repository => \r\n                <Repository \r\n                    name={repository.name} \r\n                    description={repository.description} \r\n                    language={repository.language}\r\n                    topics={repository.topics}    \r\n                    url={repository.html_url}\r\n                    homepage={repository.homepage}\r\n                />\r\n            ))});\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <span>{this.state.repositories} </span>\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Heading from 'react-bulma-components/lib/components/heading';\r\nimport Container from 'react-bulma-components/lib/components/container';\r\nimport Columns from 'react-bulma-components/lib/components/columns';\r\nimport Box from 'react-bulma-components/lib/components/box';\r\nimport '../App.scss'\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const AboutMe = () => <span/>","\r\n\r\nimport {MyFooter} from './MyFooter';\r\nimport React from 'react';\r\nimport Hero from 'react-bulma-components/lib/components/hero';\r\nimport Heading from 'react-bulma-components/lib/components/heading';\r\nimport '../App.scss'\r\nimport Columns from 'react-bulma-components/lib/components/columns';\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { Projects } from './Projects';\r\nimport { AboutMe } from './AboutMe';\r\n\r\nexport class Home extends React.Component {\r\n\r\n    render() {\r\n\r\n\r\n        return <div className='code has-text-weight-normal'>\r\n                    \r\n                    <Hero size='medium'>\r\n                        <Hero.Body>\r\n                            \r\n                                <Columns>\r\n                                    <Columns.Column></Columns.Column>\r\n                            \r\n                                    <Columns.Column size='two-fifths'>\r\n                            \r\n                                        <Link to='/home'><Heading className='code has-text-link' size={2}>Holden Perkins </Heading></Link>\r\n                                        \r\n                                        <Heading subtitle className=' pt-4'>\r\n                                            Reach out to me on <Link to='/github'>GitHub</Link>, <Link to='/linkedin'>LinkedIn</Link>, or at <Link to='/'>hldprk@gmail.com</Link>.\r\n                                        </Heading>\r\n                                        \r\n                                        <Projects/>\r\n\r\n                                        <AboutMe/>\r\n                                   \r\n                                    </Columns.Column>\r\n                            \r\n                                    <Columns.Column></Columns.Column>\r\n                            \r\n                                </Columns>\r\n\r\n\r\n\r\n                        </Hero.Body>\r\n                    </Hero>\r\n                    \r\n                    <MyFooter/>\r\n\r\n                </div>\r\n\r\n\r\n    }\r\n\r\n}","\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nexport class LinkedInRedirect extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        window.location.replace('https://www.linkedin.com/in/holden-perkins-9102a4179/');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <span></span>\r\n        \r\n    }\r\n\r\n}","\nimport React from 'react';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\nimport { GithubRedirect } from './components/GithubRedirect';\nimport {Home} from './components/Home';\nimport { LinkedInRedirect } from './components/LinkedInRedirect';\nimport {Projects} from './components/Projects';\nimport {AboutMe} from \"./components/AboutMe\"\n\nconst App = props =>\n    <Router>\n\n        <Switch>\n\n            <Route path='/home' exact component={Home}></Route>\n            <Route path='/' exact component={Home}></Route>\n            <Route path='/about-me' component={AboutMe}></Route>\n            <Route path='/projects' component={Projects}></Route>\n            <Route path='/github' exact component={GithubRedirect}></Route>\n            <Route path='/linkedin' exact component={LinkedInRedirect}></Route>\n\n        </Switch>\n\n\n    </Router>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}